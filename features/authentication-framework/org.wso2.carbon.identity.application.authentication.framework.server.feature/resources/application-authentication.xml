<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
~ Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
~
~ Licensed under the Apache License, Version 2.0 (the "License");
~ you may not use this file except in compliance with the License.
~ You may obtain a copy of the License at
~
~ http://www.apache.org/licenses/LICENSE-2.0
~
~ Unless required by applicable law or agreed to in writing, software
~ distributed under the License is distributed on an "AS IS" BASIS,
~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~ See the License for the specific language governing permissions and
~ limitations under the License.
 -->

<ApplicationAuthentication xmlns="http://wso2.org/projects/carbon/application-authentication.xml">

    <!--
        ProxyMode allows framework to operate in either 'smart' mode
        or 'dumb' mode.
        smart = both local and federated authentication is supported
        dumb = only federated authentication is supported
    -->
    <ProxyMode>smart</ProxyMode>

    <!--
        AuthenticationEndpointURL is location of the web app containing
        the authentication related pages
    -->
    <AuthenticationEndpointURL>/authenticationendpoint/login.do</AuthenticationEndpointURL>
    <AuthenticationEndpointRetryURL>/authenticationendpoint/retry.do</AuthenticationEndpointRetryURL>
    <AuthenticationEndpointMissingClaimsURL>/authenticationendpoint/claims.do</AuthenticationEndpointMissingClaimsURL>

    <!--
        Extensions allow extending the default behaviour of the authentication
        process.
    -->
    <Extensions>
        <RequestCoordinator>org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.DefaultRequestCoordinator</RequestCoordinator>
        <AuthenticationRequestHandler>org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.DefaultAuthenticationRequestHandler</AuthenticationRequestHandler>
        <LogoutRequestHandler>org.wso2.carbon.identity.application.authentication.framework.handler.request.impl.DefaultLogoutRequestHandler</LogoutRequestHandler>
        <StepBasedSequenceHandler>org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.GraphBasedSequenceHandler</StepBasedSequenceHandler>
        <RequestPathBasedSequenceHandler>org.wso2.carbon.identity.application.authentication.framework.handler.sequence.impl.DefaultRequestPathBasedSequenceHandler</RequestPathBasedSequenceHandler>
        <StepHandler>org.wso2.carbon.identity.application.authentication.framework.handler.step.impl.GraphBasedStepHandler</StepHandler>
        <HomeRealmDiscoverer>org.wso2.carbon.identity.application.authentication.framework.handler.hrd.impl.DefaultHomeRealmDiscoverer</HomeRealmDiscoverer>
        <ClaimHandler>org.wso2.carbon.identity.application.authentication.framework.handler.claims.impl.DefaultClaimHandler</ClaimHandler>
        <ProvisioningHandler>org.wso2.carbon.identity.application.authentication.framework.handler.provisioning.impl.DefaultProvisioningHandler</ProvisioningHandler>
    </Extensions>

    <!--
        AuthenticatorNameMappings allow specifying an authenticator
        against a pre-defined alias (which will be used by other components.
        E.g. Application Mgt component). This enables the usage of a custom
        authenticator in place of an authenticator that gets packed with the
        distribution.
    -->
    <AuthenticatorNameMappings>
        <AuthenticatorNameMapping name="BasicAuthenticator" alias="basic" />
        <AuthenticatorNameMapping name="OAuthRequestPathAuthenticator" alias="oauth-bearer" />
        <AuthenticatorNameMapping name="BasicAuthRequestPathAuthenticator" alias="basic-auth" />
        <AuthenticatorNameMapping name="IWAAuthenticator" alias="iwa" />
        <AuthenticatorNameMapping name="SAMLSSOAuthenticator" alias="samlsso" />
        <AuthenticatorNameMapping name="OpenIDConnectAuthenticator" alias="openidconnect" />
        <AuthenticatorNameMapping name="PassiveSTSAuthenticator" alias="passive-sts" />
    </AuthenticatorNameMappings>

    <!-- 
        AuthenticatorConfigs allow specifying various configurations needed
        by the authenticators by using any number of \'Parameter\' elements
        E.g.
        <AuthenticatorConfig name="CustomAuthenticator" enabled="true" />
            <Parameter name="paramName1">paramValue</Parameter>
            <Parameter name="paramName2">paramValue</Parameter>
        </AuthenticatorConfig>
    -->
    <AuthenticatorConfigs>
        <AuthenticatorConfig name="BasicAuthenticator" enabled="true">
            <!--Parameter name="UserNameAttributeClaimUri">http://wso2.org/claims/emailaddress</Parameter-->
            <!--Parameter name="showAuthFailureReason">true</Parameter-->
            <Parameter name="AuthMechanism">basic</Parameter>
        </AuthenticatorConfig>
        <AuthenticatorConfig name="IdentifierExecutor" enabled="true">
            <Parameter name="ValidateUsername">false</Parameter>
        </AuthenticatorConfig>
        <AuthenticatorConfig name="SessionExecutor" enabled="true">
            <Parameter name="MaxSessionCount">1</Parameter>
        </AuthenticatorConfig>
        <AuthenticatorConfig name="OAuthRequestPathAuthenticator" enabled="true"/>
        <AuthenticatorConfig name="BasicAuthRequestPathAuthenticator" enabled="true">
            <Parameter name="AuthMechanism">basic</Parameter>
        </AuthenticatorConfig>
         <AuthenticatorConfig name="SAMLSSOAuthenticator" enabled="true">
            <!--Parameter name="SignAuth2SAMLUsingSuperTenant">true</Parameter-->
            <!--Parameter name="SAML2SSOManager">org.wso2.carbon.identity.application.authenticator.samlsso.manager.DefaultSAML2SSOManager</Parameter-->
        </AuthenticatorConfig>
        <AuthenticatorConfig name="OpenIDConnectAuthenticator" enabled="true">
            <!--Parameter name="IDTokenHandler">org.wso2.carbon.identity.application.authenticator.oidc.DefaultIDTokenHandler</Parameter-->
            <!--Parameter name="ClaimsRetriever">org.wso2.carbon.identity.application.authenticator.oidc.OIDCUserInfoClaimsRetriever</Parameter-->
        </AuthenticatorConfig>
        <AuthenticatorConfig name="GoogleOIDCAuthenticator" enabled="true">
            <Parameter name="GoogleTokenEndpoint">https://accounts.google.com/o/oauth2/token</Parameter>
            <Parameter name="GoogleAuthzEndpoint">https://accounts.google.com/o/oauth2/auth</Parameter>
            <Parameter name="GoogleUserInfoEndpoint">https://www.googleapis.com/oauth2/v3/userinfo</Parameter>
        </AuthenticatorConfig>
        <AuthenticatorConfig name="MicrosoftWindowsLive" enabled="true">
            <Parameter name="AuthTokenEndpoint">https://login.live.com/oauth20_token.srf</Parameter>
            <Parameter name="AuthnEndpoint">https://login.live.com/oauth20_authorize.srf</Parameter>
            <Parameter name="UserInfoEndpoint">https://apis.live.net/v5.0/me?access_token=</Parameter>
        </AuthenticatorConfig>
        <AuthenticatorConfig name="FacebookAuthenticator" enabled="true">
            <Parameter name="AuthTokenEndpoint">https://graph.facebook.com/oauth/access_token</Parameter>
            <Parameter name="AuthnEndpoint">http://www.facebook.com/dialog/oauth</Parameter>
            <Parameter name="UserInfoEndpoint">https://graph.facebook.com/me</Parameter>
                        <!--<Parameter name="ClaimDialectUri">http://wso2.org/facebook/claims</Parameter>-->
        </AuthenticatorConfig>
        <AuthenticatorConfig  name="FIDOAuthenticator" enabled="true">
            <Parameter name="FidoAuth">/authenticationendpoint/fido-auth.jsp</Parameter>
            <Parameter name="Fido2Auth">/authenticationendpoint/fido2-auth.jsp</Parameter>
                       <!--Please uncomment the following property and define AppID if you are using proxy configurations-->
                       <!--<Parameter name="AppID">https://localhost</Parameter>-->
        </AuthenticatorConfig>
        <AuthenticatorConfig  name="FIDO2Authenticator" enabled="true">
            <Parameter name="FidoAuth">/authenticationendpoint/fido2-uaf.jsp</Parameter>
            <!--Please uncomment the following property and define AppID if you are using proxy configurations-->
            <!--<Parameter name="AppID">https://localhost</Parameter>-->
        </AuthenticatorConfig>
        <AuthenticatorConfig name="YahooOAuth2Authenticator" enabled="true">
            <Parameter name="YahooTokenEndpoint">https://api.login.yahoo.com/oauth2/get_token</Parameter>
            <Parameter name="YahooOAuthzEndpoint">https://api.login.yahoo.com/oauth2/request_auth</Parameter>
            <Parameter name="YahooUserInfoEndpoint">https://api.login.yahoo.com/openid/v1/userinfo</Parameter>
        </AuthenticatorConfig>
        <AuthenticatorConfig name="MobileConnectAuthenticator" enabled="true">
                       <Parameter name="MCAuthenticationEndpointURL">mobileconnectauthenticationendpoint/mobileconnect.jsp</Parameter>
                       <Parameter name="MCDiscoveryAPIURL">https://discover.mobileconnect.io/gsma/v2/discovery/</Parameter>
                       <Parameter name="redirectToMultiOptionPageOnFailure">false</Parameter>
                </AuthenticatorConfig>
        <AuthenticatorConfig name="EmailOTP" enabled="true">
            <Parameter name="EMAILOTPAuthenticationEndpointURL">authenticationendpoint/email_otp.do</Parameter>
            <Parameter name="EmailOTPAuthenticationEndpointErrorPage">authenticationendpoint/email_otp_error.do</Parameter>
            <Parameter name="EmailAddressRequestPage">authenticationendpoint/email_capture.do</Parameter>
            <Parameter name="useEventHandlerBasedEmailSender">true</Parameter>
            <Parameter name="GmailClientId">gmailClientIdValue</Parameter>
            <Parameter name="GmailClientSecret">gmailClientSecretValue</Parameter>
            <Parameter name="GmailRefreshToken">gmailRefreshTokenValue</Parameter>
            <Parameter name="GmailEmailEndpoint">https://www.googleapis.com/gmail/v1/users/[userId]/messages/send</Parameter>
            <Parameter name="GmailAuthTokenType">Bearer</Parameter>
            <Parameter name="GmailTokenEndpoint">https://www.googleapis.com/oauth2/v3/token</Parameter>
            <Parameter name="accessTokenRequiredAPIs">Gmail</Parameter>
            <Parameter name="usecase">local</Parameter>
            <!--To configure Sendgrid as the Email OTP Provider uncomment below lines-->
            <!--
           <Parameter name="SendgridAPIKey">sendgridAPIKeyValue</Parameter>
           <Parameter name="SendgridEmailEndpoint">https://api.sendgrid.com/api/mail.send.json</Parameter>
           <Parameter name="SendgridFormData">sendgridFormDataValue</Parameter>
           <Parameter name="SendgridURLParams">sendgridURLParamsValue</Parameter>
           <Parameter name="SendgridAuthTokenType">Bearer</Parameter>
           <Parameter name="apiKeyHeaderRequiredAPIs">Sendgrid</Parameter>
           -->
       </AuthenticatorConfig>
       <AuthenticatorConfig name="SMSOTP" enabled="true">
           <Parameter name="SMSOTPAuthenticationEndpointURL">smsotpauthenticationendpoint/smsotp.jsp</Parameter>
           <Parameter name="SMSOTPAuthenticationEndpointErrorPage">smsotpauthenticationendpoint/smsotpError.jsp</Parameter>
           <Parameter name="MobileNumberRegPage">smsotpauthenticationendpoint/mobile.jsp</Parameter>
           <Parameter name="RetryEnable">true</Parameter>
           <Parameter name="ResendEnable">true</Parameter>
           <Parameter name="BackupCode">true</Parameter>
           <Parameter name="SMSOTPEnableByUserClaim">true</Parameter>
           <Parameter name="SMSOTPMandatory">false</Parameter>
           <Parameter name="CaptureAndUpdateMobileNumber">true</Parameter>
           <Parameter name="SendOTPDirectlyToMobile">false</Parameter>
           <Parameter name="redirectToMultiOptionPageOnFailure">false</Parameter>
       </AuthenticatorConfig>
       <AuthenticatorConfig name="x509CertificateAuthenticator" enabled="true">
           <Parameter name="AuthenticationEndpoint">https://localhost:8443/x509-certificate-servlet</Parameter>
           <Parameter name="username">CN</Parameter>
           <!--<Parameter name="setClaimURI">http://wso2.org/claims/identity/userCertificate</Parameter>-->
            <!--<Parameter name="EnforceSelfRegistration">true</Parameter>-->
        </AuthenticatorConfig>
        <AuthenticatorConfig name="totp" enabled="true">
            <Parameter name="encodingMethod">Base32</Parameter>
            <Parameter name="timeStepSize">30</Parameter>
            <Parameter name="windowSize">3</Parameter>
            <Parameter name="authenticationMandatory">true</Parameter>
            <Parameter name="enrolUserInAuthenticationFlow">true</Parameter>
            <Parameter name="useEventHandlerBasedEmailSender">true</Parameter>
            <Parameter name="usecase">local</Parameter>
            <Parameter name="secondaryUserstore">primary</Parameter>
            <Parameter name="TOTPAuthenticationEndpointURL">authenticationendpoint/totp.do</Parameter>
            <Parameter name="TOTPAuthenticationEndpointErrorPage">authenticationendpoint/totp_error.do</Parameter>
            <Parameter name="TOTPAuthenticationEndpointEnableTOTPPage">authenticationendpoint/totp_enroll.do</Parameter>
            <Parameter name="Issuer">WSO2</Parameter>
            <Parameter name="UseCommonIssuer">true</Parameter>
            <Parameter name="AllowSendingVerificationCodeByEmail">false</Parameter>
            <Parameter name="HideUserStoreFromDisplayInQRUrl">false</Parameter>
        </AuthenticatorConfig>
    </AuthenticatorConfigs>

    <!--
        Sequences allow specifying authentication flows for different
        registered applications. \'default\' sequence is taken if an
        application specific sequence doesn't exist in this file or
        in the Application Mgt module.
    -->
    <Sequences>
        <!-- Default Sequence. This is mandatory -->
        <Sequence appId="default">
            <Step order="1">
                <Authenticator name="BasicAuthenticator"/>
            </Step>
        </Sequence>
    </Sequences>

    <!--
            AuthenticationEndpointQueryParams are the request parameters
            that would be sent to the AuthenticationEndpoint.
            'action' defines the behaviour: if 'include', only the defined
            parameters would be included in the request.
            If 'exclude' specified, all the parameters received by the
            Authentication Framework would be sent in the request except
            the ones specified.
            'sessionDataKey', 'type', 'relyingParty', 'sp' and 'authenticators'
            parameters will be always sent. They should not be specified here.
        -->
    <AuthenticationEndpointQueryParams action="exclude">
        <AuthenticationEndpointQueryParam name="username"/>
        <AuthenticationEndpointQueryParam name="password"/>
        <AuthenticationEndpointQueryParam name="SAMLRequest"/>
    </AuthenticationEndpointQueryParams>

    <!--
    Similar to the 'AuthenticationEndpointQueryParams' above, the following section defines the parameters that
    should be included/excluded in the redirection responses from authentication framework. These parameters may be
    generated internally from the framework, handlers or authenticators. The filtered parameters will be available
    via the REST API for authentication framework. "removeOnConsumeFromAPI" defines whether to make the filtered
    parameters unavailable from the API on the first consumption.
    -->
    <AuthenticationEndpointRedirectParams action="exclude" removeOnConsumeFromAPI="true">
        <AuthenticationEndpointRedirectParam name="loggedInUser"/>
    </AuthenticationEndpointRedirectParams>

        <!--TenantDomainDropDownEnabled>true</TenantDomainDropDownEnabled>
        <TenantDataListenerURLs>
          <TenantDataListenerURL>/authenticationendpoint/tenantlistrefresher.do</TenantDataListenerURL>
        </TenantDataListenerURLs-->

    <!--
    Allow federated authenticators to use the idp local claim dialect instead of the authenticator's claim
    dialect when using a custom dialect claim mapping. The configuration affects all federated authenticators.
    Default value: false
    -->
    <!--<AllowCustomClaimMappingsForAuthenticators>true</AllowCustomClaimMappingsForAuthenticators>-->

</ApplicationAuthentication>
