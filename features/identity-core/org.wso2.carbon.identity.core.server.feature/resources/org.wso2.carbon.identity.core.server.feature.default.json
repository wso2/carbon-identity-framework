{
  "authentication.consent.prompt": true,
  "authentication.map_federated_users_to_local": false,

  "identity.data_source": "jdbc/WSO2IdentityDB",
  "identity_data_source.skip_db_schema_creation": false,
  "database.identity_db.pool_options.maxActive": "50",
  "database.identity_db.pool_options.maxWait": "60000",
  "database.identity_db.pool_options.testOnBorrow": "true",
  "database.identity_db.pool_options.validationInterval": "30000",
  "database.identity_db.pool_options.defaultAutoCommit": "true",
  "database.identity_db.jmx_enable": "false",
  "server.clock_skew": "5m",
  "session_data.persistence.enable_persistence": true,
  "session_data.persistence.persistence_pool_size": "0",
  "session_data.persistence.persist_temporary_data": true,
  "session_data.persistence.enable_user_session_mapping": true,
  "session_data.cleanup.enable_expired_data_cleanup": true,
  "session_data.cleanup.expire_session_data_after": "$ref{session.timeout.remember_me_session_timeout}",
  "session_data.cleanup.expire_pre_session_data_after": "40m",
  "session_data.cleanup.clean_expired_session_data_every": "1d",
  "session_data.cleanup.clean_expired_session_data_in_chunks_of": "8192",
  "session_data.cleanup.clean_logged_out_sessions_at_immediate_cycle": true,
  "session_data.cleanup.enable_pre_session_data_cleanup": true,
  "session_data.cleanup.pre_session_data_cleanup_thread_pool_size": "20",
  "session.nonce.cookie.enabled": true,
  "session.timeout.idle_session_timeout": "15m",
  "session.timeout.remember_me_session_timeout": "14d",
  "session.timeout.extend_remember_me_session_timeout_on_auth": true,
  "key_mgt.keystore_dir": "${carbon.home}/conf/keystores",
  "key_mgt.key_manager_type": "SunX509",
  "key_mgt.trust_manager_type": "SunX509",
  "identity.issuer_policy": "SelfAndManaged",
  "identity.token_validation_policy": "CertValidate",

  "server.internal_hostname": "localhost",

  "service_provider.sp_name_regex": "^[a-zA-Z0-9._-]+(?: [a-zA-Z0-9._-]+)*$",

  "remote_fetch.enable": false,
  "remote_fetch.working_directory": "${carbon.home}/tmp/",

  "oauth.token_cleanup.enable": true,
  "oauth.token_cleanup.retain_access_tokens_for_auditing": true,

  "oauth.use_entityid_as_issuer_in_oidc_discovery": true,
  "oauth.token_validation.authorization_code_validity": "5m",
  "oauth.token_validation.app_access_token_validity": "1h",
  "oauth.token_validation.user_access_token_validity": "1h",
  "oauth.token_validation.refresh_token_validity": "1d",
  "oauth.timestamp_skew": "0m",
  "oauth.token_renewal.renew_refresh_token": true,
  "oauth.token_renewal.extend_refresh_token_expiry_time_on_renewal": true,
  "oauth.token_renewal.renew_access_token_per_request": false,
  "oauth.hash_tokens_and_secrets": false,
  "oauth.hash_token_algorithm": "SHA-256",
  "oauth.map_federated_users_to_local": "$ref{authentication.map_federated_users_to_local}",
  "oauth.token_generation.include_username_in_access_token": false,
  "oauth.handle_logout_gracefully": true,

  "oauth.token.validation.include_validation_context_as_jwt_in_reponse": false,
  "oauth.extensions.token_context_generator": "org.wso2.carbon.identity.oauth2.authcontext.JWTTokenGenerator",
  "oauth.extensions.token_context_claim_retriever": "org.wso2.carbon.identity.oauth2.authcontext.DefaultClaimsRetriever",
  "oauth.extensions.token_context_dialect_uri": "http://wso2.org/claims",
  "oauth.token_validation.validation_response_signing_algorithm": "SHA256withRSA",
  "oauth.token.validation.validation_response_jwt_validity": "15m",
  "oauth.token_generation.retry_count_on_persistence_failures": "5",

  "oauth.endpoints.oauth1_request_token_url": "$ref{server.base_path}/oauth/request-token",
  "oauth.endpoints.oauth1_authorize_url": "$ref{server.base_path}/oauth/authorize-url",
  "oauth.endpoints.oauth1_access_token_url": "$ref{server.base_path}/oauth/access-token",
  "oauth.endpoints.oauth2_authz_url": "$ref{server.base_path}/oauth2/authorize",
  "oauth.endpoints.oauth2_token_url": "$ref{server.base_path}/oauth2/token",
  "oauth.endpoints.oauth2_revoke_url": "$ref{server.base_path}/oauth2/revoke",
  "oauth.endpoints.oauth2_introspect_url": "$ref{server.base_path}/oauth2/introspect",
  "oauth.endpoints.oauth2_user_info_url": "$ref{server.base_path}/oauth2/userinfo",
  "oauth.endpoints.oauth2_consent_page": "$ref{server.base_path}/authenticationendpoint/oauth2_authz.do",
  "oauth.endpoints.oauth2_error_page": "$ref{server.base_path}/authenticationendpoint/oauth2_error.do",
  "oauth.endpoints.oauth2_dcr_url": "$ref{server.base_path}/api/identity/oauth2/dcr/v1.1/register",
  "oauth.endpoints.oauth2_jwks_url": "$ref{server.base_path}/oauth2/jwks",
  "oauth.endpoints.oidc_check_session_url": "$ref{server.base_path}/oidc/checksession",
  "oauth.endpoints.oidc_logout_url": "$ref{server.base_path}/oidc/logout",
  "oauth.endpoints.oidc_consent_page": "$ref{server.base_path}/authenticationendpoint/oauth2_consent.do",
  "oauth.endpoints.oidc_logout_consent_page":"$ref{server.base_path}/authenticationendpoint/oauth2_logout_consent.do",
  "oauth.endpoints.oidc_logout_page": "$ref{server.base_path}/authenticationendpoint/oauth2_logout.do",
  "oauth.endpoints.oidc_web_finger_url": "$ref{server.base_path}/.well-known/webfinger",
  "oauth.endpoints.oidc_discovery_url": "$ref{server.base_path}/oauth2/oidcdiscovery",

  "oauth.response_type.token.enable": true,
  "oauth.response_type.token.class": "org.wso2.carbon.identity.oauth2.authz.handlers.AccessTokenResponseTypeHandler",
  "oauth.response_type.code.enable": true,
  "oauth.response_type.code.class": "org.wso2.carbon.identity.oauth2.authz.handlers.CodeResponseTypeHandler",
  "oauth.response_type.id_token.enable": true,
  "oauth.response_type.id_token.class": "org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenResponseTypeHandler",
  "oauth.response_type.id_token_token.enable": true,
  "oauth.response_type.id_token_token.class": "org.wso2.carbon.identity.oauth2.authz.handlers.IDTokenTokenResponseTypeHandler",
  "oauth.response_type.code_token.enable": true,
  "oauth.response_type.code_token.class": "org.wso2.carbon.identity.oauth2.authz.handlers.HybridResponseTypeHandler",
  "oauth.response_type.code_id_token.enable": true,
  "oauth.response_type.code_id_token.class": "org.wso2.carbon.identity.oauth2.authz.handlers.HybridResponseTypeHandler",
  "oauth.response_type.code_id_token_token.enable": true,
  "oauth.response_type.code_id_token_token.class": "org.wso2.carbon.identity.oauth2.authz.handlers.HybridResponseTypeHandler",
  "oauth.response_type.device.enable": false,
  "oauth.response_type.device.class": "org.wso2.carbon.identity.oauth2.device.response.DeviceFlowResponseTypeHandler",
  "oauth.response_type.device.validator": "org.wso2.carbon.identity.oauth2.device.response.DeviceFlowResponseTypeValidator",
  "oauth.response_type.none.enable": true,
  "oauth.response_type.none.class": "org.wso2.carbon.identity.oauth2.authz.handlers.NoneResponseTypeHandler",
  "oauth.response_type.none.validator": "org.wso2.carbon.identity.oauth.common.NoneResponseTypeValidator",

  "oauth.grant_type.jwt.enable_iat_validation":"true",
  "oauth.grant_type.jwt.iat_validity_period":"30",

  "oauth.grant_type.authorization_code.enable": true,
  "oauth.grant_type.authorization_code.grant_handler": "org.wso2.carbon.identity.oauth2.token.handlers.grant.AuthorizationCodeGrantHandler",
  "oauth.grant_type.password.enable": true,
  "oauth.grant_type.password.grant_handler": "org.wso2.carbon.identity.oauth2.token.handlers.grant.PasswordGrantHandler",
  "oauth.grant_type.refresh_token.enable": true,
  "oauth.grant_type.refresh_token.grant_handler": "org.wso2.carbon.identity.oauth2.token.handlers.grant.RefreshGrantHandler",
  "oauth.grant_type.client_credentials.enable": true,
  "oauth.grant_type.client_credentials.grant_handler": "org.wso2.carbon.identity.oauth2.token.handlers.grant.ClientCredentialsGrantHandler",
  "oauth.grant_type.client_credentials.allow_refresh_tokens": false,
  "oauth.grant_type.client_credentials.allow_id_token": false,
  "oauth.grant_type.saml_bearer.enable": true,
  "oauth.grant_type.saml_bearer.grant_handler": "org.wso2.carbon.identity.oauth2.token.handlers.grant.saml.SAML2BearerGrantHandler",
  "oauth.grant_type.iwa_ntlm.enable": true,
  "oauth.grant_type.iwa_ntlm.grant_handler": "org.wso2.carbon.identity.oauth2.token.handlers.grant.iwa.ntlm.NTLMAuthenticationGrantHandler",
  "oauth.grant_type.jwt_bearer.enable": true,
  "oauth.grant_type.jwt_bearer.grant_handler": "org.wso2.carbon.identity.oauth2.grant.jwt.JWTBearerGrantHandler",
  "oauth.grant_type.jwt_bearer.grant_validator": "org.wso2.carbon.identity.oauth2.grant.jwt.JWTGrantValidator",
  "oauth.grant_type.jwt_bearer.allow_refresh_tokens": true,
  "oauth.grant_type.uma_ticket.enable": true,
  "oauth.grant_type.uma_ticket.grant_handler": "org.wso2.carbon.identity.oauth.uma.grant.UMA2GrantHandler",
  "oauth.grant_type.uma_ticket.grant_validator": "org.wso2.carbon.identity.oauth.uma.grant.GrantValidator",
  "oauth.grant_type.uma_ticket.retrieve_uma_permission_info_through_introspection": false,
  "oauth.grant_type.kerberos.enable": false,
  "oauth.grant_type.kerberos.grant_handler": "org.wso2.carbon.identity.oauth2.grant.kerberos.KerberosGrant",
  "oauth.grant_type.kerberos.grant_validator": "org.wso2.carbon.identity.oauth2.grant.kerberos.KerberosGrantValidator",
  "oauth.grant_type.account_switch.enable": true,
  "oauth.grant_type.account_switch.grant_handler": "org.wso2.carbon.identity.user.account.association.handler.grant.AccountSwitchGrantHandler",
  "oauth.grant_type.account_switch.grant_validator": "org.wso2.carbon.identity.user.account.association.validator.grant.AccountSwitchGrantValidator",
  "oauth.grant_type.device_code.enable": false,
  "oauth.grant_type.device_code.grant_handler": "org.wso2.carbon.identity.oauth2.device.grant.DeviceFlowGrant",
  "oauth.grant_type.device_code.grant_validator": "org.wso2.carbon.identity.oauth2.device.grant.DeviceFlowGrantValidator",

  "oauth.dcrm.application_role_permission_required_to_view": true,

  "oauth.enable_jwt_token_validation_during_introspection": true,

  "oauth.extensions.callback_handlers": [
    {
      "class":"org.wso2.carbon.identity.oauth.callback.DefaultCallbackHandler"
    }
  ],
  "oauth.token_validator.bearer.enable": true,
  "oauth.token_validator.bearer.class": "org.wso2.carbon.identity.oauth2.validators.DefaultOAuth2TokenValidator",
  "oauth.token_validator.jwt.enable": true,
  "oauth.token_validator.jwt.class": "org.wso2.carbon.identity.oauth2.validators.OAuth2JWTTokenValidator",
  "oauth.scope_validator.jdbc.enable": true,
  "oauth.scope_validator.jdbc.class": "org.wso2.carbon.identity.oauth2.validators.JDBCScopeValidator",
  "oauth.scope_validator.xacml.enable": true,
  "oauth.scope_validator.xacml.class": "org.wso2.carbon.identity.oauth2.validators.xacml.XACMLScopeValidator",
  "oauth.scope_validator.authz_implicit.enable": true,
  "oauth.grant_type.saml_bearer.user_type": "FEDERATED",

  "oauth.prompt_consent": "$ref{authentication.consent.prompt}",
  "oauth.prompt_login_consent": "$ref{oauth.prompt_consent}",
  "oauth.prompt_logout_consent": "$ref{oauth.prompt_consent}",
  "oauth.oidc.extensions.id_token_builder": "org.wso2.carbon.identity.openidconnect.DefaultIDTokenBuilder",
  "oauth.oidc.claims.enable_oidc_dialect": true,
  "oauth.oidc.claims.enable_unmapped_user_attributes": false,

  "oauth.oidc.id_token.signature_algorithm": "SHA256withRSA",
  "oauth.oidc.id_token.issuer": "$ref{oauth.endpoints.oauth2_token_url}",
  "oauth.oidc.extensions.claim_callback_handler": "org.wso2.carbon.identity.openidconnect.SAMLAssertionClaimsCallback",
  "oauth.oidc.token_validation.id_token_validity": "1h",
  "oauth.oidc.id_token.supported_encryption_algorithms": [
    "RSA-OAEP",
    "RSA1_5"
  ],
  "oauth.oidc.id_token.supported_encryption_methods": [
    "A128GCM",
    "A192GCM",
    "A256GCM",
    "A128CBC-HS256",
    "A128CBC+HS256"
  ],
  "oauth.oidc.token_validation.logout_token_validity": "2m",
  "oauth.oidc.extensions.request_object_validator": "org.wso2.carbon.identity.openidconnect.RequestObjectValidatorImpl",
  "oauth.oidc.user_info.jwt_signature_algorithm": "$ref{oauth.oidc.id_token.signature_algorithm}",
  "oauth.oidc.extensions.user_info_claim_retriever": "org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoUserStoreClaimRetriever",
  "oauth.oidc.extensions.user_info_request_validator": "org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInforRequestDefaultValidator",
  "oauth.oidc.extensions.user_info_access_token_validator": "org.wso2.carbon.identity.oauth.endpoint.user.impl.UserInfoISAccessTokenValidator",

  "oauth.oidc.request_object_builder.request_param_value_builder.enabled": true,
  "oauth.oidc.request_object_builder.request_param_value_builder.class": "org.wso2.carbon.identity.openidconnect.RequestParamRequestObjectBuilder",
  "oauth.oidc.redirect_to_post_logout_uri_on_consent_denial": true,

  "saml.entity_id": "${carbon.host}",
  "saml.attribute_claim_dialect": "http://wso2.org/claims",
  "saml.slo.retry_attempts": "5",
  "saml.slo.retry_interval": "1m",
  "saml.slo.host_name_verification": true,
  "saml.response.validity": "5m",
  "saml.artifact.validity": "4m",
  "saml.use_tenant_key_of": "user",
  "saml.tenant_partitioning.enable": false,
  "saml.signing_alg": "http://www.w3.org/2000/09/xmldsig#rsa-sha1",
  "saml.digest_alg": "http://www.w3.org/2000/09/xmldsig#sha1",
  "saml.assertion_encryption_alg": "http://www.w3.org/2001/04/xmlenc#aes256-cbc",
  "saml.key_encryption_alg": "http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p",
  "saml.enable_user_domain_crpto": false,
  "saml.enable_request_validity_period": false,
  "saml.request_validity_period": "5m",
  "saml.metadata.assertion_encrypt_with_app_cert": true,
  "saml.enable_saml_sp_certificate_expiry_validation": true,

  "saml.endpoints.idp_url": "$ref{server.base_path}/samlsso",
  "saml.endpoints.logout": "$ref{server.base_path}/authenticationendpoint/samlsso_logout.do",
  "saml.endpoints.notification": "$ref{server.base_path}/authenticationendpoint/samlsso_notification.do",
  "saml.endpoints.artifact_resolution": "$ref{server.base_path}/samlartresolve",
  "saml.endpoints.ecp": "$ref{server.base_path}/samlecp",

  "saml.extensions.assertion_builder": "org.wso2.carbon.identity.sso.saml.builders.assertion.DefaultSAMLAssertionBuilder",
  "saml.extensions.response_builder": "org.wso2.carbon.identity.sso.saml.builders.DefaultResponseBuilder",
  "saml.extensions.encrypter": "org.wso2.carbon.identity.sso.saml.builders.encryption.DefaultSSOEncrypter",
  "saml.extensions.signer": "org.wso2.carbon.identity.sso.saml.builders.signature.DefaultSSOSigner",
  "saml.extensions.redirect_signature_validator": "org.wso2.carbon.identity.sso.saml.validators.SAML2HTTPRedirectDeflateSignatureValidator",

  "saml.metadata.validity_period": "1h",
  "saml.metadata.enable_signing": false,
  "saml.metadata.enable_authentication_requests_signing": false,

  "sts.endpoint.idp": "$ref{server.base_path}/services/wso2carbon-sts",

  "passive_sts.token_store_class": "org.wso2.carbon.identity.sts.passive.utils.NoPersistenceTokenStore",
  "passive_sts.slo.host_name_verification": true,

  "passive_sts.endpoints.idp": "$ref{server.base_path}/passivests",
  "passive_sts.endpoints.retry": "$ref{server.base_path}/authenticationendpoint/retry.do",

  "entitlement.thrift.enable": false,
  "entitlement.thrift.receiver_port": "${Ports.ThriftEntitlementReceivePort}",
  "entitlement.thrift.client_timeout": "10s",
  "entitlement.thrift.key_store.id": "$ref{keystore.tls.file_name}",
  "entitlement.thrift.key_store.password": "$ref{keystore.tls.password}",
  "entitlement.thrift.hostname": "${carbon.host}",

  "scim.endpoints.users_endpoint": "$ref{server.base_path}/wso2/scim/Users",
  "scim.endpoints.groups_endpoint": "$ref{server.base_path}/wso2/scim/Groups",
  "scim.authentication_handler.basic.properties.Priority": "5",
  "scim.authentication_handler.oauth.properties.Priority": "10",
  "scim.authentication_handler.oauth.properties.AuthorizationServer": "local://services",
  "scim.enable_complex_multivalued_attribute_support": false,
  "scim2.endpoints.users_endpoint": "$ref{server.base_path}/scim2/Users",
  "scim2.endpoints.groups_endpoint": "$ref{server.base_path}/scim2/Groups",
  "scim2.enable_complex_multivalued_attribute_support": false,
  "scim2.enable_filtering_enhancements": false,
  "scim2.notify_userstore_status": false,
  "scim2.filter_users_and_groups_from_primary_domain": false,
  "scim2.mandate_domain_for_uesrnames_and_group_names_in_response": false,
  "scim2.mandate_domain_for_group_names_in_groups_response": false,
  "scim2.return_updated_group_in_group_patch_response": true,
  "scim2.remove_duplicate_users_in_users_response": false,

  "identity_mgt.recovery.notification.manage_internally": true,
  "identity_mgt.recovery.callback_url": ".*",
  "identity_mgt.recovery.enable_detailed_error_messages":false,
  "identity_mgt.recovery.enable_auto_login": false,
  "identity_mgt.recovery.notify_user_existence": false,
  "identity_mgt.user_onboarding.notification.manage_internally": true,
  "identity_mgt.user_self_registration.notification.manage_internally": true,
  "identity_mgt.default_mail_validity_period": "1d",
  "identity_mgt.endpoint.enable_recovery_endpoint": true,
  "identity_mgt.endpoint.enable_self_signup_endpoint": true,
  "identity_mgt.password_reset_email.enable_password_reset_email": false,
  "identity_mgt.password_reset_sms.sms_otp_validity": "1m",
  "identity_mgt.password_reset_sms.sms_otp_regex": "[a-zA-Z0-9]{6}",
  "identity_mgt.password_reset_email.enable_recaptcha": false,
  "identity_mgt.password_reset_email.reset_mail_validity": "$ref{identity_mgt.default_mail_validity_period}",
  "identity_mgt.notification_channel_recovery.recovery_code_validity": "1m",
  "identity_mgt.resend_notification.resend_code_validity": "1m",
  "identity_mgt.password_reset_email.notify_on_reset":false,

  "identity_mgt.lite_user_registration.enable": false,
  "identity_mgt.lite_user_registration.lock_on_creation": true,
  "identity_mgt.lite_user_registration.notification.manage_internally": true,
  "identity_mgt.lite_user_registration.recaptcha.enable": true,
  "identity_mgt.lite_user_registration.verification_email_validity": "1440m",
  "identity_mgt.lite_user_registration.verification_sms_validity": "1m",
  "identity_mgt.lite_user_registration.callback_url": ".*",

  "identity_mgt.password_reset_challenge_questions.enable_password_reset_challenge_questions": false,
  "identity_mgt.password_reset_challenge_questions.notify_on_initiation": false,
  "identity_mgt.password_reset_challenge_questions.min_required_answers": "2",
  "identity_mgt.password_reset_challenge_questions.enable_recaptcha": true,
  "identity_mgt.password_reset_challenge_questions.failures_before_recaptcha": "2",
  "identity_mgt.recovery.challenge_question.answer_regex": ".*",
  "identity_mgt.recovery.challenge_question.enforce_answer_uniqueness": false,
  "identity_mgt.password_reset_challenge_questions.question_separator": "!",
  "identity_mgt.password_reset_challenge_questions.skip_on_insufficient_answers": true,

  "identity_mgt.forced_challenge_questions.enable_forced_challenge_questions": false,
  "identity_mgt.challenge_questions.min_required_answers": "",

  "identity_mgt.password_reset_challenge_questions.answer_regex": ".*",
  "identity_mgt.password_reset_challenge_questions.enforce_answer_uniqueness": false,

  "identity_mgt.password_reset_by_admin.enable_emailed_link_based_reset": false,
  "identity_mgt.password_reset_by_admin.enable_emailed_otp_based_reset": false,
  "identity_mgt.password_reset_by_admin.enable_offline_otp_based_reset": false,
  "identity_mgt.password_reset_by_admin.enable_account_lock_notification": false,
  "identity_mgt.password_reset_by_admin.enable_account_unlock_notification": false,

  "identity_mgt.password_update.preserve_logged_in_session": false,

  "identity_mgt.login_identifiers.enable" : false,
  "identity_mgt.login_identifiers.primary_claim" : "http://wso2.org/claims/username",

  "identity_mgt.username_recovery.email.enable_username_recovery": false,
  "identity_mgt.username_recovery.email.enable_recaptcha": false,

  "identity_mgt.notification.default_notification_channel" : "EMAIL",
  "identity_mgt.notification.resolve_notification_channel" : false,

  "identity_mgt.user_onboarding.enable_email_verification": false,
  "identity_mgt.user_onboarding.ask_password_from_user": true,
  "identity_mgt.user_onboarding.lock_on_creation": true,
  "identity_mgt.user_onboarding.verification_email_validity": "$ref{identity_mgt.default_mail_validity_period}",
  "identity_mgt.user_onboarding.ask_password_email_validity": "$ref{identity_mgt.default_mail_validity_period}",
  "identity_mgt.user_onboarding.password_generator": "org.wso2.carbon.user.mgt.common.DefaultPasswordGenerator",

  "identity_mgt.tenant_registration.ask_password_email_validity": "$ref{identity_mgt.default_mail_validity_period}",

  "identity_mgt.user_self_registration.allow_self_registration": false,
  "identity_mgt.user_self_registration.enable_account_lock_for_verified_preferred_channel" : true,
  "identity_mgt.user_self_registration.enable_detailed_api_response" : false,
  "identity_mgt.user_self_registration.lock_on_creation": true,
  "identity_mgt.user_self_registration.notify_account_confirmation": false,
  "identity_mgt.user_self_registration.enable_recaptcha": true,
  "identity_mgt.user_self_registration.verification_email_validity": "$ref{identity_mgt.default_mail_validity_period}",
  "identity_mgt.user_self_registration.callback_url": "[${carbon.protocol}://${carbon.host}:${carbon.management.port}].*[/authenticationendpoint/login.do]",
  "identity_mgt.user_self_registration.enable_resend_confirmation_recaptcha": false,
  "identity_mgt.user_self_registration.auto_login.enable": false,
  "identity_mgt.user_self_registration.auto_login.alias_name": "wso2carbon",

  "identity_mgt.user_claim_update.email.enable_verification": false,
  "identity_mgt.user_claim_update.email.verification_email_validity": "$ref{identity_mgt.default_mail_validity_period}",
  "identity_mgt.user_claim_update.mobile.enable_verification": false,
  "identity_mgt.user_claim_update.mobile.verification_sms_otp_validity": "5",
  "identity_mgt.user_claim_update.use_verify_claim": true,

  "identity_mgt_account_suspension.use_identity_claims": true,

  "sp_role_management.return_only_mapped_local_roles": false,

  "authentication_policy.check_account_exist": true,
  "authentication.jit_provisioning.username_provisioning_url": "/accountrecoveryendpoint/register.do",
  "authentication.jit_provisioning.password_provisioning_url": "/accountrecoveryendpoint/signup.do",

  "event.default_listener.workflow.priority": "10",
  "event.default_listener.workflow.enable": true,
  "event.default_listener.identity_mgt.priority": "50",
  "event.default_listener.identity_mgt.enable": false,
  "event.default_listener.scim.priority": "90",
  "event.default_listener.scim.enable": false,
  "event.default_listener.scim_tenant_mgt.priority": "-1",
  "event.default_listener.scim_tenant_mgt.enable": true,
  "event.default_listener.scim2_tenant_mgt.priority": "-1",
  "event.default_listener.scim2_tenant_mgt.enable": true,
  "event.default_listener.scim2.priority": "93",
  "event.default_listener.scim2.enable": true,
  "event.default_listener.governance_identity_mgt.priority": "95",
  "event.default_listener.governance_identity_mgt.enable": true,
  "event.default_listener.governance_identity_store.priority": "97",
  "event.default_listener.governance_identity_store.enable": true,
  "event.default_listener.governance_identity_store.data_store": "org.wso2.carbon.identity.governance.store.JDBCIdentityDataStore",
  "event.default_listener.application_authentication.priority": "11",
  "event.default_listener.application_authentication.enable": true,
  "event.default_listener.mutual_tls_authenticator.priority": "158",
  "event.default_listener.mutual_tls_authenticator.enable": true,
  "event.default_listener.oauth_listener.priority": "12",
  "event.default_listener.oauth_listener.enable": false,
  "event.default_listener.basic_auth_client_authenticator.priority": "100",
  "event.default_listener.basic_auth_client_authenticator.enable": true,
  "event.default_listener.user_deletion.priority": "98",
  "event.default_listener.user_deletion.enable": false,
  "event.default_listener.consent_mgt_handler.priority": "110",
  "event.default_listener.consent_mgt_handler.enable": true,
  "event.default_listener.user_session_termination.priority": "85",
  "event.default_listener.user_session_termination.enable": true,
  "event.default_listener.jit_provisioning_handler.priority": "20",
  "event.default_listener.jit_provisioning_handler.enable": true,
  "event.default_listener.post_auth_association_handler.priority": "25",
  "event.default_listener.post_auth_association_handler.enable": true,
  "event.default_listener.subject_identifier_handler.priority": "30",
  "event.default_listener.subject_identifier_handler.enable": true,
  "event.default_listener.user_mgt_audit_logger.priority": "0",
  "event.default_listener.user_mgt_audit_logger.enable": false,
  "event.default_listener.user_management_audit_logger.priority": "1",
  "event.default_listener.user_management_audit_logger.enable": true,
  "event.default_listener.user_failure_audit_logger.priority": "0",
  "event.default_listener.user_failure_audit_logger.enable": true,
  "event.default_listener.user_claim_audit_logger.priority": "9",
  "event.default_listener.user_claim_audit_logger.enable": false,
  "event.default_listener.user_claim_audit_logger.LogUpdatedClaimsOnly": false,
  "event.default_listener.username_resolver.priority": "14",
  "event.default_listener.username_resolver.enable": true,
  "event.default_listener.userid_resolver.priority": "15",
  "event.default_listener.userid_resolver.enable": true,

  "event.default_recorder.user_delete_event.name": "org.wso2.carbon.user.mgt.recorder.DefaultUserDeletionEventRecorder",
  "event.default_recorder.user_delete_event.enable": false,
  "event.default_recorder.user_delete_event.write_to_separate_csv.enable": false,

  "cache.default_timeout": "300ms",
  "cache.default_capacity": "5000",
  "cache.framework_session_context_cache.enable": true,
  "cache.framework_session_context_cache.timeout": "$ref{cache.default_timeout}",
  "cache.framework_session_context_cache.capacity": "$ref{cache.default_capacity}",
  "cache.authentication_context_cache.enable": true,
  "cache.authentication_context_cache.timeout": "$ref{cache.default_timeout}",
  "cache.authentication_context_cache.capacity": "$ref{cache.default_capacity}",
  "cache.authentication_request_cache.enable": true,
  "cache.authentication_request_cache.timeout": "$ref{cache.default_timeout}",
  "cache.authentication_request_cache.capacity": "$ref{cache.default_capacity}",
  "cache.authentication_result_cache.enable": true,
  "cache.authentication_result_cache.timeout": "$ref{cache.default_timeout}",
  "cache.authentication_result_cache.capacity": "$ref{cache.default_capacity}",
  "cache.app_info_cache.enable": true,
  "cache.app_info_cache.timeout": "900ms",
  "cache.app_info_cache.capacity": "$ref{cache.default_capacity}",
  "cache.authorization_grant_cache.enable": true,
  "cache.authorization_grant_cache.timeout": "$ref{cache.default_timeout}",
  "cache.authorization_grant_cache.capacity": "$ref{cache.default_capacity}",
  "cache.jwks_cache.enable": true,
  "cache.jwks_cache.timeout": "$ref{cache.default_timeout}",
  "cache.jwks_cache.capacity": "$ref{cache.default_capacity}",
  "cache.oauth_cache.enable": true,
  "cache.oauth_cache.timeout": "$ref{cache.default_timeout}",
  "cache.oauth_cache.capacity": "$ref{cache.default_capacity}",
  "cache.oauth_scope_cache.enable": true,
  "cache.oauth_scope_cache.timeout": "$ref{cache.default_timeout}",
  "cache.oauth_scope_cache.capacity": "$ref{cache.default_capacity}",
  "cache.oauth_session_data_cache.enable": true,
  "cache.oauth_session_data_cache.timeout": "$ref{cache.default_timeout}",
  "cache.oauth_session_data_cache.capacity": "$ref{cache.default_capacity}",
  "cache.saml_sso_participant_cache.enable": true,
  "cache.saml_sso_participant_cache.timeout": "$ref{cache.default_timeout}",
  "cache.saml_sso_participant_cache.capacity": "$ref{cache.default_capacity}",
  "cache.saml_sso_session_index_cache.enable": true,
  "cache.saml_sso_session_index_cache.timeout": "$ref{cache.default_timeout}",
  "cache.saml_sso_session_index_cache.capacity": "$ref{cache.default_capacity}",
  "cache.saml_sso_session_data_cache.enable": true,
  "cache.saml_sso_session_data_cache.timeout": "$ref{cache.default_timeout}",
  "cache.saml_sso_session_data_cache.capacity": "$ref{cache.default_capacity}",
  "cache.service_provider_cache.enable": true,
  "cache.service_provider_cache.timeout": "900ms",
  "cache.service_provider_cache.capacity": "$ref{cache.default_capacity}",
  "cache.service_provider_cache_id.enable": true,
  "cache.service_provider_cache_id.timeout": "900ms",
  "cache.service_provider_cache_id.capacity": "$ref{cache.default_capacity}",
  "cache.service_provider_cache_inbound_auth.enable": true,
  "cache.service_provider_cache_inbound_auth.timeout": "900ms",
  "cache.service_provider_cache_inbound_auth.capacity": "$ref{cache.default_capacity}",
  "cache.provisioning_connector_cache.enable": true,
  "cache.provisioning_connector_cache.timeout": "900ms",
  "cache.provisioning_connector_cache.capacity": "$ref{cache.default_capacity}",
  "cache.provisioning_entity_cache.enable": true,
  "cache.provisioning_entity_cache.timeout": "900ms",
  "cache.provisioning_entity_cache.capacity": "$ref{cache.default_capacity}",
  "cache.service_provider_provisioning_connector_cache.enable": true,
  "cache.service_provider_provisioning_connector_cache.timeout": "900ms",
  "cache.service_provider_provisioning_connector_cache.capacity": "$ref{cache.default_capacity}",
  "cache.idp_cache_by_auth_property.enable": true,
  "cache.idp_cache_by_auth_property.timeout": "900ms",
  "cache.idp_cache_by_auth_property.capacity": "$ref{cache.default_capacity}",
  "cache.idp_cache_by_hri.enable": true,
  "cache.idp_cache_by_hri.timeout": "900ms",
  "cache.idp_cache_by_hri.capacity": "$ref{cache.default_capacity}",
  "cache.idp_cache_by_name.enable": true,
  "cache.idp_cache_by_name.timeout": "900ms",
  "cache.idp_cache_by_name.capacity": "$ref{cache.default_capacity}",

  "resource_access_control.default_access_allow": false,
  "resource_access_control.introspect.secured": true,
  "resource_access_control.introspect.permissions": [
    "/permission/admin/manage/identity/applicationmgt/view"
  ],
  "resource_access_control.scim2_me_get_method.secured": true,
  "resource_access_control.scim2_me_get_method.permission": "/permission/admin/login",
  "resource_access_control.scim2_me_get_method.keep_resource": true,
  "resource_access_control.scim2_me_delete_method.secured": true,
  "resource_access_control.scim2_me_delete_method.permission": "/permission/admin/manage/identity/usermgt/delete",
  "resource_access_control.scim2_me_delete_method.keep_resource": true,
  "resource_access_control.scim2_me_put_method.secured": true,
  "resource_access_control.scim2_me_put_method.permission": "/permission/admin/login",
  "resource_access_control.scim2_me_put_method.keep_resource": true,
  "resource_access_control.scim2_me_patch_method.secured": true,
  "resource_access_control.scim2_me_patch_method.permission": "/permission/admin/login",
  "resource_access_control.scim2_me_patch_method.keep_resource": true,
  "resource_access_control.scim2_me_post_method.secured": true,
  "resource_access_control.scim2_me_post_method.permission": "/permission/admin/manage/identity/usermgt/create",
  "resource_access_control.scim2_me_post_method.keep_resource": true,

  "user.association.enable_for_federated_users": false,
  "user.enable_per_user_functionality_locking": false,
  "tenant_context.enable_tenant_qualified_urls": false,
  "tenant_context.rewrite.webapps": [
    "/api/identity/user/v1.0/",
    "/api/identity/consent-mgt/v1.0/",
    "/api/identity/recovery/v0.9/",
    "/oauth2/",
    "/scim2/",
    "/api/identity/entitlement/",
    "/api/identity/oauth2/dcr/v1.1/",
    "/api/identity/template/mgt/v1.0.0/",
    "/api/identity/oauth2/v1.0/",
    "/api/identity/oauth2/uma/permission/v1.0/",
    "/api/identity/oauth2/uma/resourceregistration/v1.0/",
    "/api/identity/config-mgt/v1.0/",
    "/api/users/v2/me/webauthn",
    "/api/identity/media/v1.0/",
    "/api/",
    "/myaccount/",
    "/console/",
    "/authenticationendpoint/",
    "/accountrecoveryendpoint/",
    "/lsp/",
    "/emailotpauthenticationendpoint/",
    "/smsotpauthenticationendpoint/",
    "/totpauthenticationendpoint/"
  ],
  "tenant_context.rewrite.servlets": [
    "/identity/(.*)",
    "/identity/metadata/saml2",
    "/commonauth(.*)",
    "/logincontext(.*)",
    "/oidc/",
    "/samlsso(.*)",
    "/samlartresolve",
    "/passivests"
  ],
  "tenant_context.rewrite.overwrite.dispatch": [
    "/myaccount/",
    "/console/"
  ],
  "tenant_context.rewrite.overwrite.ignore_dispatch_path": [
    "/libs/",
    "/resources/",
    "/static/",
    "/deployment.config.json",
    "/rpIFrame.html"
  ],
  "intermediate_cert_validation.enable":false,
  "intermediate_cert_validation.cert_cns": [
    "localhost"
  ],
  "intermediate_cert_validation.exempt_contexts": [
    "scim2"
  ],

  "oauth.jwks_endpoint.enable": true,
  "oauth.jwks_endpoint.enforce_certificate_expiry_time_validity": true,
  "oauth.jwks_endpoint.connection_timeout": "1s",
  "oauth.jwks_endpoint.read_timeout": "1s",
  "oauth.jwks_endpoint.size_limit_bytes": "51200",

  "authentication.adaptive.event_publisher.authentication_type": "basic",
  "authentication.adaptive.async_executer_pool_size": "5",
  "authentication.adaptive.http_connections.max": "20",
  "authentication.adaptive.http_connections.max_per_route": "20",
  "authentication.adaptive.http_connections.default_timeout": "5s",
  "authentication.adaptive.http_connections.connection_timeout": "$ref{authentication.adaptive.http_connections.default_timeout}",
  "authentication.adaptive.http_connections.read_timeout": "$ref{authentication.adaptive.http_connections.default_timeout}",
  "authentication.adaptive.http_connections.request_timeout": "$ref{authentication.adaptive.http_connections.default_timeout}",
  "authentication.adaptive.long_wait.page_refresh_interval": "500ms",
  "authentication.adaptive.long_wait.timout": "10s",
  "authentication.adaptive.long_wait.prompt": false,

  "federated.idp.role_claim_value_attribute_separator": ",",
  "configuration.store.query_length.max": "4194304",
  "configuration.store.allow_cross_tenant_search": false,

  "fido.webauthn.enable": true,
  "fido.trusted.origins": [
    "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
  ],
  "pagination.max_items_per_page": "100",
  "pagination.default_items_per_page": "15",

  "user_filtering.show_display_name_of_user": false,
  "analytics.publish_password_grant_logins": false,

  "user_store_mgt.allowed_user_stores": [
    "org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager",
    "org.wso2.carbon.user.core.ldap.UniqueIDActiveDirectoryUserStoreManager",
    "org.wso2.carbon.user.core.ldap.UniqueIDReadOnlyLDAPUserStoreManager",
    "org.wso2.carbon.user.core.ldap.UniqueIDReadWriteLDAPUserStoreManager"
  ],

  "system_applications.read_only_apps": [
    "Console",
    "My Account"
  ],

  "legacy_feature": [
    {
      "id": "oauth",
      "version": "1.0",
      "enable": false
    },
    {
      "id": "identity/connect/dcr",
      "enable": false
    }
  ],

  "continue_on_claim_handling_error": true,

  "console.applications.account_app.configs.path": "/myaccount/overview",
  "console.app_base_name": "console",
  "console.client_id": "CONSOLE",
  "console.debug.enable": false,
  "console.applications.admin_app.configs": {
    "basePath": "/manage",
    "displayName": "Manage",
    "path": "/manage/users"
  },
  "console.applications.developer_app.configs": {
    "basePath": "/develop",
    "displayName": "Develop",
    "path": "/develop/applications"
  },
  "console.documentation.base_url": "https://api.github.com",
  "console.documentation.content_base_url": "https://api.github.com/repos/wso2/docs-is/contents/en/docs",
  "console.documentation.github_options": {
    "branch": "new_restructure"
  },
  "console.documentation.image_prefix_url": "https://github.com/wso2/docs-is/raw/new_restructure/en/docs/",
  "console.documentation.provider": "GITHUB",
  "console.documentation.structure_file_type": "YAML",
  "console.documentation.structure_file_url": "https://api.github.com/repos/wso2/docs-is/contents/en/mkdocs.yml",
  "console.login_callback_path": "/login",
  "console.logout_callback_path": "/login",
  "console.route_paths": {
    "home": "/develop/applications",
    "login": "/login",
    "logout": "/logout"
  },
  "console.ui.app_copyright": "WSO2 Identity Server",
  "console.ui.app_title": "Console | WSO2 Identity Server",
  "console.ui.app_name": "Console",
  "console.ui.app_logo_path": "/assets/images/logo.svg",
  "console.ui.product_name": "Identity Server",
  "console.theme": "default",
  "console.session.params.userIdleTimeOut": 600,
  "console.session.params.userIdleWarningTimeOut": 580,
  "console.session.params.sessionRefreshTimeOut": 300,
  "console.session.params.checkSessionInterval": 3,
  "console.applications.enabled": true,
  "console.product_version.configs": {
    "versionOverride": "BETA"
  },
  "console.applications.scopes": {
    "create": [
      "internal_application_mgt_create"
    ],
    "read": [
      "internal_application_mgt_view"
    ],
    "update": [
      "internal_application_mgt_update"
    ],
    "delete": [
      "internal_application_mgt_delete"
    ]
  },
  "console.applications.ui.certificate_alias_enabled": false,
  "console.approvals.enabled": true,
  "console.approvals.scopes": {
    "create": [
      "internal_humantask_view"
    ],
    "read": [
      "internal_humantask_view"
    ],
    "update": [
      "internal_humantask_view"
    ],
    "delete": [
      "internal_humantask_view"
    ]
  },
  "console.attribute_dialects.enabled": true,
  "console.ui.is_default_dialect_editing_enabled": false,
  "console.attribute_dialects.scopes": {
    "create": [
      "internal_claim_meta_create"
    ],
    "read": [
      "internal_claim_meta_view"
    ],
    "update": [
      "internal_claim_meta_update"
    ],
    "delete": [
      "internal_claim_meta_delete"
    ]
  },
  "console.certificates.enabled": true,
  "console.certificates.scopes": {
    "create": [
      "internal_keystore_update"
    ],
    "read": [
      "internal_keystore_view"
    ],
    "update": [
      "internal_keystore_update"
    ],
    "delete": [
      "internal_keystore_update"
    ]
  },
  "console.email_templates.enabled": true,
  "console.email_templates.scopes": {
    "create": [
      "internal_email_mgt_create"
    ],
    "read": [
      "internal_email_mgt_view"
    ],
    "update": [
      "internal_email_mgt_update"
    ],
    "delete": [
      "internal_email_mgt_delete"
    ]
  },
  "console.general_configurations.enabled": true,
  "console.general_configurations.scopes": {
    "create": [],
    "read": [
      "internal_idp_view"
    ],
    "update": [
      "internal_idp_update"
    ],
    "delete": []
  },
  "console.groups.enabled": true,
  "console.groups.scopes": {
    "create": [
      "internal_role_mgt_create"
    ],
    "read": [
      "internal_role_mgt_view"
    ],
    "update": [
      "internal_role_mgt_update"
    ],
    "delete": [
      "internal_role_mgt_delete"
    ]
  },
  "console.identity_providers.enabled": true,
  "console.identity_providers.scopes": {
    "create": [
      "internal_idp_create"
    ],
    "read": [
      "internal_idp_view"
    ],
    "update": [
      "internal_idp_update"
    ],
    "delete": [
      "internal_idp_delete"
    ]
  },
  "console.oidc_scopes.enabled": true,
  "console.oidc_scopes.scopes": {
    "create": [
      "internal_application_mgt_create"
    ],
    "read": [
      "internal_application_mgt_view"
    ],
    "update": [
      "internal_application_mgt_update"
    ],
    "delete": [
      "internal_application_mgt_delete"
    ]
  },
  "console.remote_fetch.enabled": true,
  "console.remote_fetch.scopes": {
    "create": [
      "internal_identity_mgt_view",
      "internal_identity_mgt_update",
      "internal_identity_mgt_create",
      "internal_identity_mgt_delete"
    ],
    "read": [
      "internal_identity_mgt_view",
      "internal_identity_mgt_update",
      "internal_identity_mgt_create",
      "internal_identity_mgt_delete"
    ],
    "update": [
      "internal_identity_mgt_view",
      "internal_identity_mgt_update",
      "internal_identity_mgt_create",
      "internal_identity_mgt_delete"
    ],
    "delete": [
      "internal_identity_mgt_view",
      "internal_identity_mgt_update",
      "internal_identity_mgt_create",
      "internal_identity_mgt_delete"
    ]
  },
  "console.roles.enabled": true,
  "console.roles.scopes": {
    "create": [
      "internal_role_mgt_create"
    ],
    "read": [
      "internal_role_mgt_view"
    ],
    "update": [
      "internal_role_mgt_update"
    ],
    "delete": [
      "internal_role_mgt_delete"
    ]
  },
  "console.users.enabled": true,
  "console.users.scopes": {
    "create": [
      "internal_user_mgt_create"
    ],
    "read": [
      "internal_user_mgt_list"
    ],
    "update": [
      "internal_user_mgt_update"
    ],
    "delete": [
      "internal_user_mgt_delete"
    ]
  },
  "console.user_stores.enabled": true,
  "console.user_stores.scopes": {
    "create": [
      "internal_userstore_create"
    ],
    "read": [
      "internal_userstore_view"
    ],
    "update": [
      "internal_userstore_update"
    ],
    "delete": [
      "internal_userstore_delete"
    ]
  },
  "console.self_app_identifier": "Console",
  "console.system_apps_identifiers": [ "Console", "My Account" ],
  "console.gravatar.configs": {
    "fallback": "404"
  },
  "console.list_all_attribute_dialects": false,

  "myaccount.app_base_name": "myaccount",
  "myaccount.client_id": "MY_ACCOUNT",
  "myaccount.login_callback_path": "/login",
  "myaccount.logout_callback_path": "/login",
  "myaccount.route_paths": {
    "home": "/overview",
    "login": "/login",
    "logout": "/logout"
  },
  "myaccount.ui.app_copyright": "WSO2 Identity Server",
  "myaccount.ui.app_title": "My Account | WSO2 Identity Server",
  "myaccount.ui.app_name": "My Account",
  "myaccount.ui.app_logo_path": "/assets/images/logo.svg",
  "myaccount.ui.product_name": "Identity Server",
  "myaccount.theme": "default",
  "myaccount.product_version.configs": {
    "versionOverride": ""
  },
  "myaccount.authenticator_app_configs": {
    "enabled": true
  },
  "myaccount.applications.enabled": true,
  "myaccount.operations.enabled": true,
  "myaccount.overview.enabled": true,
  "myaccount.personal_info.enabled": true,
  "myaccount.security.enabled": true,
  "myaccount.operations.scopes": {
    "create": [],
    "read": [
      "internal_humantask_view"
    ],
    "update": [],
    "delete": []
  },
  "myaccount.session.params.userIdleTimeOut": 600,
  "myaccount.session.params.userIdleWarningTimeOut": 580,
  "myaccount.session.params.sessionRefreshTimeOut": 300,
  "myaccount.session.params.checkSessionInterval": 3,
  "myaccount.personal_info.disabled_features": ["profileInfo.mobileVerification"],
  "cors.allow_generic_http_requests": true,
  "cors.allow_any_origin": false,
  "cors.allowed_origins": [],
  "cors.allow_subdomains": false,
  "cors.supported_methods": [
    "GET",
    "POST",
    "PUT",
    "PATCH",
    "DELETE",
    "HEAD",
    "OPTIONS"
  ],
  "cors.support_any_header": true,
  "cors.supported_headers": [],
  "cors.exposed_headers": [],
  "cors.supports_credentials": true,
  "cors.max_age": -1,
  "cors.tag_requests": false,
  "audit.log.contextual_param.params": [],
  "common_auth_caller_path.enable_common_auth_caller_path_validation": true
}
