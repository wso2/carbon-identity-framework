# Copyright (c) 2005-2013, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\
# WSO2 Inc. licenses this file to you under the Apache License, Version 2.0 (the "License");\
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing,\
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\
# See the License for the specific language governing permissions and limitations under the License.

identity.providers=Identity Providers
identity.provider=Identity Provider
add.identity.provider=Add New Identity Provider
resident.idp.alias=Alias
resident.idp.alias.help=If the resident identity provider is known by an alias at the federated identity provider specify it
description=Description:
description.help=A meaningful description about the identity provider
claim.config.head=Claim Configuration
role.config.head=Role Configuration
out.bound.auth.config=Federated Authenticators
in.bound.provisioning.config=Just-in-Time Provisioning
out.bound.provisioning.config=Outbound Provisioning Connectors
add=Add
list=List
error.loading.idps=Error while loading Identity Providers
resident.idp=Resident Identity Provider
resident.idp.config=Resident Identity Provider Configuration
registered.idps=Registered Identity Providers
actions=Actions
edit=Edit
delete=Delete
edit.idp.info=Edit Identity Provider Information
no.idp=No Identity Providers registered
error.loading.idp=Error while loading Identity Provider
identity.provider.info=Basic Information
name=Identity Provider Name
name.help=Enter a unique name for this identity provider
primary=Primary Identity Provider:
federation.hub.identity.proider=Federation Hub Identity Provider:
federation.hub.identity.proider.help=Check if this points to a federation hub identity provider
primary.help=Check if this is the primary Identity Provider
home.realm.id=Home Realm Identifier
home.realm.id.help=Enter the home realm identifier for this identity provider
select_idp_certificate_type=Choose IDP certificate type
jwks.uri=Identity Provider's JWKS Endpoint
jwks.uri.help=Enter Identity Provider's JWKS endpoint
certificate=Identity Provider Public Certificate
certificate.help=Upload identity provider's public certificate in PEM format
public.cert.delete=Delete Identity Provider Public Certificate
issuerdn=Issuer DN
subjectdn=Subject DN
notafter=Not After
notbefore=Not Before
serialno=Serial Number
version=Version
claimURIs=Identity Provider Claim URIs
claimURIs.help=Add Claims URIs supported by Identity Provider
add.claim=Add Claim Mapping
delete.claim=Delete Claim URI
default.value=Default Value
add.role.mapping=Add Role Mapping
user.id.claim.uri=User ID Claim URI
user.id.claim.uri.help=Specifies the claim URI that identifies the user identifier at the identity provider
role.claim.uri=Role Claim URI
role.claim.uri.help=Specifies the Claim URI that identifies the Roles at the Identity Provider
provisioning.user.store.claim.uri=Provisioning User Store ID Claim URI
provisioning.user.store.claim.uri.help=Specifies the Claim URI that identifies the Provisioning User Store ID
claim.mappings=Claim URI Mappings
claim.mappings.help=Map Identity Provider Claim URIs to local Claim URIs. E.g. "idp_claim_uri_1:local_claim_uri_1,idp_claim_uri_2:local_claim_uri_2"
claim.mapping.delete=Delete Claim URI Mappings
idp.claim=Identity Provider Claim URI
tenant.claim=Local Claim URI
roles=Identity Provider Roles
roles.mapping.help=Add identity provider role mapping
local.role=Local Role
add.role=Add Role
delete.role=Delete Role
role.mappings=Role Mappings
role.mappings.help=Map Identity Provider roles to local roles. E.g. "idp_role_1:local_role_1,idp_role_2:local_role_2"
role.mapping.delete=Delete Role Mappings
idp.role=Identity Provider Role
user.store.id=User Store Domain ID
tenant.role=Local Role
token.endpoint.alias=Token Endpoint Alias
token.endpoint.alias.help=If this token endpoint is identified by an alias by the identity provider specify it
inbound.provisioning=Inbound Provisioning
provisioning.enabled.help=Specifies if users federated from this identity provider needs to be provisioned locally
openid.config=OpenID Configuration
openid.enabled=Enable OpenID
openid.enabled.help=Specifies if OpenID is enabled for this identity provider
openid.default=Default
openid.default.help=Specifies if OpenID is the default
openid.realm=OpenID Realm Identifier
openid.realm.help=Enter OpenID Realm Identifier value
select_dialet_type=Select Claim mapping Dialect
openid.url=OpenID Server URL
openid.url.help=Enter OpenID URL value
openid.user.id.location=OpenID User ID Location
openid.user.id.location.help=Specifies the location to find the user identifier in the Open ID assertion
saml2.web.sso.config=SAML2 Web SSO Configuration
saml2.sso.enabled=Enable SAML2 Web SSO
saml2.sso.enabled.help=Specifies if SAML2 Web SSO is enabled for this identity provider
saml2.sso.default=Default
saml2.sso.default.help=Specifies if SAML2 Web SSO is the default
idp.entity.id=Identity Provider Entity ID
idp.entity.destinations=Destination URLs
idp.destination.add=Add
idp.not.valid.destination=Please enter a valid destination
idp.destination.empty=You should have atleast one destination URL. Add another URL to remove the last URL
idp.entity.id.help=Enter identity provider's entity identifier value. This should be a valid URI/URL.
sp.entity.id=Service Provider Entity ID
sp.entity.id.help=Enter the service provider's entity identifier value
name.id.format=NameID format
name.id.format.help=NameID format to be used in the SAML request
sso.url=SSO URL
idle.session.timeout=Idle Session Time Out
idle.session.timeout.help=Enter the idle session timeout in minutes
remember.me.timeout=Remember Me Period
remember.me.timeout.help=Enter the remember me period in minutes
sso.url.help=Enter identity provider's SAML2 Web SSO URL value
authn.request.signed=Enable Authentication Request Signing
authn.request.signed.help=Specifies if the SAML2 authentication request to the identity provider must be signed or not
logout.enabled=Enable Logout
logout.enabled.help=Specifies if logout/single Logout is enabled for this identity provider
logout.url=Logout Url
logout.url.help=Enter identity provider's logout URL value if it is different from the SSO Url
logout.request.signed=Enable Logout Request Signing
logout.request.signed.help=Specifies if SAML2 logout request to the identity provider must be signed or not
authn.response.signed=Enable Authentication Response Signing
authn.response.signed.help=Specifies if SAML2 authentication response from the identity provider must be signed or not
request.method = HTTP Binding
request.method.help = Choose the HTTP Binding or decide from incoming request
authn.context.class.ref=Response Authentication Context Class
authn.context.class.ref.help=Choose the AuthnContextClassRef sent back to the service provider
saml2.sso.user.id.location=SAML2 Web SSO User ID Location
saml2.sso.user.id.location.help=Specifies the location to find the user identifier in the SAML2 assertion
oauth1.config=OAuth10a Configuration
oauth1.request.endpoint=OAuth10a Request Token URL
oauth1.authz.endpoint=OAuth10a Authorize URL
oauth1.access.endpoint=OAuth10a Access Token URL
oidc.config=OAuth2/OpenID Connect Configuration
oidc.enabled=Enable OAuth2/OpenIDConnect
oidc.enabled.help=Specifies if OAuth2/OpenID Connect is enabled for this identity provider
oidc.default=Default
oidc.default.help=Specifies if OpenID Connect is the default
authz.endpoint=Authorization Endpoint URL
authz.endpoint.help=Enter OAuth2/OpenID Connect authorization endpoint URL value
token.endpoint=Token Endpoint URL
revoke.endpoint=Token Revocation Endpoint URL
introspect.endpoint=Token Introspection Endpoint URL
token.endpoint.help=Enter OAuth2/OpenID Connect token endpoint URL value
user.endpoint=User Info Endpoint URL
user.endpoint.help=Enter OpenID Connect user info endpoint URL value
checksession.endpoint=Session IFrame Endpoint URL
logout.endpoint=Logout Endpoint URL
dcr.endpoint=Dynamic Client Registration Endpoint URL
jwks.endpoint=JWKS Endpoint URL
webfinger.endpoint=Web finger Endpoint URL
discovery.endpoint=Discovery Endpoint URL
client.id=Client Id
client.id.help=Enter OAuth2/OpenID Connect client identifier value
client.secret=Client Secret
client.secret.help=Enter OAuth2/OpenID Connect client secret value
oidc.user.id.location=OpenID Connect User ID Location
oidc.user.id.location.help=Specifies the location to find the user identifier in the ID token assertion
oidc.enable.basicauth=Enable HTTP basic auth for client authentication
oidc.enable.basicauth.help=Specifies that HTTP basic authentication should be used for client authentication, else \
  client credentials will be included in the request body
passive.sts.config=WS-Federation (Passive) Configuration
passive.sts.local.config=WS-Federation (Passive) Configuration
sts.local.config=Security Token Service Configuration
passive.sts.enabled=Enable Passive STS
query.param=Additional Query Parameters
query.param.help=Additional query parameters. e.g: paramName1=value1
passive.sts.enabled.help=Specifies if passive sts is enabled for this identity provider
passive.sts.default=Default
passive.sts.default.help=Specifies if passive sts is the default
passive.sts.realm=Passive STS Realm
passive.sts.realm.help=Enter passive sts realm value
sts.url=Security Token Service URL
passive.sts.url=Passive STS URL
passive.sts.url.help=Enter passive sts URL value
passive.sts.user.id.location=Passive STS User ID Location
passive.sts.user.id.location.help=Specifies the location to find the user identifier in the SAML2 assertion
passive.sts.enable.assertion.signature.validation=Enable SAML Assertion Signature Validation
passive.sts.enable.assertion.signature.validation.help=Specifies if SAML Assertion Signature should be validated
passive.sts.enable.assertion.audience.validation=Enable SAML Assertion Audience Validation
passive.sts.enable.assertion.audience.validation.help=Specifies if SAML Assertion Audience should be validated
fbauth.config=Facebook Configuration
fbauth.enabled=Enable Facebook Authentication
fbauth.enabled.help=Specifies if Facebook authentication is enabled for this identity provider
fbauth.default=Default
fbauth.default.help=Specifies if Facebook authentication is the default
fbauth.client.id.help=Enter Facebook client identifier value
fbauth.client.secret.help=Enter Facebook client secret value
fbauth.scope=Scope
fbauth.scope.help=Enter a comma separated list of permissions to request from the user
fbauth.user.information.fields=User Information Fields
fbauth.user.information.fields.help=Enter comma-separated user information fields you want to retrieve
fbauth.callback.url.fields=Callback Url
fbauth.callback.url.fields.help=Enter value corresponding to callback url
spml.provisioning.connector=SPML Provisioning Configuration
spml.provisioning.enabled=Enable Connector
spml.provisioning.enabled.help=Enable identity provisioning to a SPML domain
spml.provisioning.user.name=Username
spml.provisioning.user.password=Password
spml.provisioning.endpoint=SPML Endpoint
spml.provisioning.objectClass=SPML ObjectClass
spml.provisioning.default.help=Set SPML connector as the default connector to provision user to this identity provider
spml.provisioning.default=Default Connector
spml.provisioning.blocking.help=Check this to make SPML provisioning blocking.
spml.provisioning.blocking=Provisioning Blocking 
button.add.spml.attribute=Add SPML Attribute
help.spml.claim.mapping=Add required SPML attributes and map to local IdP claims.
google.provisioning.connector=Google Provisioning Configuration
google.provisioning.enabled=Enable Connector
google.provisioning.enabled.help=Enable identity provisioning to a Google domain
google.provisioning.default=Default Connector
google.provisioning.default.help=Set Google connector as the default connector to provision user to this identity provider
google.provisioning.blocking.help=Check this to make Google provisioning blocking.
google.provisioning.blocking=Provisioning Blocking 
google.provisioning.domain.name=Google Domain
google.provisioning.domain.name.help=Name of the Google domain which needed to provision users. Ex: mygoogledomain.com
google.provisioning.attribute.primary.email=Primary Email
google.provisioning.attribute.primary.email.help=How to retrieve primary email address for the account to be created
google.provisioning.attribute.password=Password
google.provisioning.attribute.password.help=How to retrieve password for the the new accounts
google.provisioning.attribute.given.name=Given Name
google.provisioning.attribute.given.name.help=How to retrieve given name attribute for the user
google.provisioning.attribute.family.name=Family Name
google.provisioning.attribute.family.name.help=How to retrieve family name attribute for the user
google.provisioning.user.id.claim=User ID Claim
google.provisioning.user.id.claim.help=Select claim URI to store Google primary key when user created
google.provisioning.service.accont.email=Service Account Email
google.provisioning.service.accont.email.help=Service account email for authentication. ex: d343s86gf@developer.gserviceaccount.com
google.provisioning.service.account.private.key=Private Key
google.provisioning.service.account.private.key.help=PKCS12 private key generated at the service account creation
google.provisioning.admin.email=Administrator's Email
google.provisioning.admin.email.help=Email of the administrator who owns above service account. ex: tom@mygoogledomain.com
google.provisioning.application.name=Application Name
google.provisioning.application.name.help=Application name to represent this connector
google.provisioning.pattern=Google Outbound Provisioning pattern
google_prov_pattern.help=This pattern is used to build the user id of google domain. Combination of attributes UD (User \
  Domain),  UN (Username), TD (Tenant Domain) and IDP (Identity Provider) can be used to construct a valid \
  pattern. Ex: {UD, UN, TD, IDP}
google.provisioning.separator=Google Provisioning Separator
google.provisioning.separator.help=This is the separator of attributes in Google Outbound Provisioning \
  pattern. </br> For example if pattern is {UN,TD} and Username: testUser, \
  Tenant Domain: TestTenant.com, Separator:_, Google Domain : testmail.com then the privisioining email is \
  testUser_testTenant.com@testmail.com
scim.provisioning.connector=SCIM Provisioning Configuration
scim.provisioning.enabled=Enable Connector
scim.provisioning.blocking.help=Check this to make SCIM provisioning blocking.
scim.provisioning.blocking=Provisioning Blocking 
scim.provisioning.enabled.help=Enable identity provisioning to a SCIM domain
scim.provisioning.default.help=Set SPML connector as the default connector to provision user to this identity provider
scim.provisioning.default=Default Connector
scim.user.endpoint=SCIM User Endpoint
scim.group.endpoint=SCIM Group Endpoint
scim2.user.endpoint=SCIM 2.0 User Endpoint
scim2.group.endpoint=SCIM 2.0 Group Endpoint
scim.provisioning.user.name=Username
scim.provisioning.user.password=Password
scim.provisioning.user.endpoint=User Endpoint
scim.provisioning.group.endpoint=Group Endpoint
scim.provisioning.userStore.domain=User Store Domain
scim.password.provisioning.enabled=Enable Password Provisioning
scim.password.provisioning.enabled.help=Enable User password provisioning to a SCIM domain
scim.default.password=Default Password
sf.provisioning.connector=Salesforce Provisioning Configuration
sf.provisioning.enabled=Enable Connector
sf.provisioning.default=Default Connector
sf.provisioning.enabled.help=Enable user provisioning to Salesforce
sf.provisioning.default.help=Set Salesforce connector as the default connector to provision user to this IdP
sf.provisioning.blocking.help=Check this to make Salesforce provisioning blocking.
sf.provisioning.blocking=Provisioning Blocking
sf.provisioning.api.version=API version
sf.provisioning.domain.name=Domain Name
sf.provisioning.client.id=Client ID
sf.provisioning.client.secret=Client Secret
sf.provisioning.username=Username
sf.provisioning.password=Password
sf.provisioning.oauth.endpoint=OAuth2 Token Endpoint
sf.provisioning.pattern=Provisioning Pattern
sf_prov_pattern.help=This pattern is used to build the user id of Salesforce domain. Combination of attributes UD (User \
  Domain),  UN (Username), TD (Tenant Domain) and IDP (Identity Provider) can be used to construct a valid \
  pattern. Ex: {UD, UN, TD, IDP}
sf.provisioning.separator=Provisioning Separator
sf.provisioning.separator.help=This is the separator of attributes in Salesforce Outbound Provisioning \
  pattern. </br> For example if pattern is {UN,TD} and Username: testUser, \
  Tenant Domain: TestTenant.com, Separator:_, Google Domain : testmail.com then the privisioining email is \
  testUser_testTenant.com@testmail.com
sf.provisioning.domain=Provisioning Domain
help.sf.claim.mapping=Add required Salesforce attributes and map to local IdP claims.
button.add.claim.mapping=Add Required Salesforce attribute
register=Register
update=Update
cancel=Cancel
error.updating.idp=Error while updating Identity Provider information. {0}
error.adding.idp=Error while adding Identity Provider information. {0}
success.deleting.idp=Successfully deleted Identity Provider information
error.deleting.idp=Error occurred while deleting Identity Provider information. {0}
home.realm.id.resident.help=Enter the home realm identifier for the resident identity provider. If required you can specify multiple identifiers as comma separated values.
resident.realm.config=Resident Realm Configuration
resident=Resident
apply.security.policy=Apply Security Policy
success.updating.resident.idp=Successfully updated Resident Identity Provider
error.updating.resident.idp=Error while updating resident Identity Provider information
wso2.claim=Local Claim URI
basic.cliam.config=Basic Claim Configuration
advanced.cliam.config=Advanced Claim Configuration
help.advanced.claim.mapping=Specify required claims for provisioning
button.add.advanced.claim=Add Claim
provisioning.role=Identity Provider OutBound Provisioning Roles
provisioning.role.help=Enter the identity provider's comma separated provisioning roles name
authn.enable.assertion.encryption=Enable Assertion Encryption
authn.enable.assertion.encryption.help=Specify if SAMLAssertion element is encrypted 
authn.enable.assertion.signing=Enable Assertion Signing 
authn.enable.assertion.signing.help=Specify if SAMLAssertion element is signed
disable.policy=Disable
enable.policy=Enable
role.claim.filter=Provisioning Claim Filter
idp.display.name=Display Name
idp.display.name.help=Specify the identity provider's display name

authentication.context.enabled=Enable Authentication Context
authentication.context.enabled.help=Enable sending RequestedAuthnContext
authentication.context.class=Authentication Context Class
authentication.context.class.help=Choose AuthnContextClassRef to be sent
authentication.context.class.custom.help=Custom AuthnContextClassRef to be sent
authentication.context.comparison=Authentication Context Comparison Level
authentication.context.comparison.help=Choose RequestedAuthnContext Comparison to be sent
signature.algorithm=Signature Algorithm
signature.algorithm.help=Specifies the SignatureMethod Algorithm
digest.algorithm=Digest Algorithm
digest.algorithm.help=Specifies the DigestMethod Algorithm. Applicable only in POST Binding
enable.force.authentication = Enable Force Authentication
enable.force.authentication.help = Enable force authentication or decide from the in coming request
attr.consuming.service.index=Attribute Consuming Service Index
attr.consuming.service.index.help=Specify the Attribute Consuming Service Index
attr.artifact.binding.enable=Enable Artifact Binding
attr.artifact.binding.enable.help=Specifies if SAML2 Artifact Binding is enabled from IDP
attr.artifact.resolve.url=Artifact Resolve Endpoint Url
attr.artifact.resolve.url.help=Specify the Artifact Resolve Endpoint Url
attr.artifact.resolve.sign=Enable Artifact Resolve Request Signing
attr.artifact.resolve.sign.help=Specifies if the SAML2 artifact resolve request to the identity provider must be signed or not
attr.artifact.response.sign=Enable Artifact Response Signing
attr.artifact.response.sign.help=Specifies if the SAML2 artifact response from the identity provider will be signed or not
include.name.id.policy=Include NameID Policy
include.name.id.policy.help=Include NameIDPolicy in the request
include.cert=Include Public Certificate
include.cert.help=Include Public Certificate in the the request
include.protocol.binding=Include Protocol Binding
include.protocol.binding.help=Include ProtocolBinding in the request
include.authentication.context=Include Authentication Context
include.authentication.context.help=Include a new RequestedAuthnContext in the request, or decide from the incoming request
callbackurl=Callback Url
callbackUrl.help=Enter value corresponding to callback url
saml.sso.upload.id.provider.metadata=Upload ID Provider From Metadata File
saml.sso.upload=Upload
saml.sso.cancel=Cancel
idp.enter.valid.issuer=Enter A Valid IDP
saml.sso.select.mode=Select Mode
saml.sso.manual.mode= Manual Configuration
saml.mode.manual=Manual Configuration
saml.mode.file=Metadata File Configuration
download.metadata.saml=Download SAML Metadata
help.metadata.select.mode=Select the input method for SAML configuration
add.tenant.config=Add
add.tenant.config.menu=Governance
identity.listner.enable=Identity Listner Enable
notification.sending.enable=Notification Sending Enable
success.adding.config=Successfully updated the configurations
error.adding.config=Error while updating configurations
userInfoEndpoint=Userinfo Endpoint URL
userInfoEndpoint.help=Enter value corresponding to userinfo endpoint url
jit.prompt.username.password.consent=Prompt for username, password and consent
jit.prompt.password.consent=Prompt for password and consent
jit.prompt.consent=Prompt for consent
jit.provision.silently=Provision silently
breadcrumb.default.seq.mgt=Default Authentication Sequence
title.default.seq.add=Add Default Authentication Sequence
title.default.seq.update=Update Default Authentication Sequence
title.list.default.seq=Default Authentication Sequences
config.default.seq.name=Sequence Name
help.default.seq.name=A meaningful name for the default authentication sequence
config.default.seq.file.location=Sequence File
help.default.seq.content=Default authentication sequence in XML file
button.import.default.seq=Add
button.update.default.seq=Update
button.cancel=Cancel
upload.default.seq.file=Upload Default Authentication Sequence File
default.seq.add.link=Add Default Authentication Sequence
field.default.seq.name=Name
field.default.seq.action=Actions
field.default.seq.edit=Edit
field.default.seq.export=Export
field.default.seq.delete=Delete
default.seq.not.registered=No Default Authentication Sequences registered
default.seq.export.para=Are you sure you want to export this default authentication sequence as an XML file?
alert.error.read.default.seq.info=Error while loading Default Authentication Sequences
alert.error.read.default.seq=Error occurred while loading default authentication sequence
alert.error.remove.default.seq=Error while removing Default Authentication Sequence
alert.error.export.default.seq=Error while exporting Default Authentication Sequence
alert.error.add.default.seq=Error while adding Default Authentication Sequence
alert.error.update.default.seq=Error while updating Default Authentication Sequence
alert.error.load.default.seq=Error while retrieving Default Authentication Sequence
alert.error.default.seq.file.available=Please specify default authentication sequence configuration file.
alert.error.default.seq.content.available=Please specify default authentication sequence content.
alert.error.default.seq.content.should.available=Default authentication sequence content should be available.
alert.confirm.delete.default.seq=Are you sure you want to delete default authentication sequence 
alert.info.add.default.seq=Default Authentication Sequence created successfully.
alert.info.update.default.seq=Default Authentication Sequence updated successfully.
next=Next
prev=Prev
