/**
 * WSO2 Identity Server Rest API - User
 * This document specifies a **RESTful API** for WSO2 **Identity Server** .  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: 0.9.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package org.wso2.carbon.identity.mgt.endpoint.util.client.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * SelfRegistrationUser
 */
@javax.annotation.Generated(value = "class io.swagger.codegen.languages.JavaClientCodegen", date = "2016-08-02T17:58:45.922Z")
public class SelfRegistrationUser   {
  @JsonProperty("username")
  private String username = null;

  @JsonProperty("tenant-domain")
  private String tenantDomain = null;

  @JsonProperty("realm")
  private String realm = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("claims")
  private List<Claim> claims = new ArrayList<Claim>();

  public SelfRegistrationUser username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public SelfRegistrationUser tenantDomain(String tenantDomain) {
    this.tenantDomain = tenantDomain;
    return this;
  }

   /**
   * Get tenantDomain
   * @return tenantDomain
  **/
  public String getTenantDomain() {
    return tenantDomain;
  }

  public void setTenantDomain(String tenantDomain) {
    this.tenantDomain = tenantDomain;
  }

  public SelfRegistrationUser realm(String realm) {
    this.realm = realm;
    return this;
  }

   /**
   * Get realm
   * @return realm
  **/
  public String getRealm() {
    return realm;
  }

  public void setRealm(String realm) {
    this.realm = realm;
  }

  public SelfRegistrationUser password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public SelfRegistrationUser claims(List<Claim> claims) {
    this.claims = claims;
    return this;
  }

   /**
   * Get claims
   * @return claims
  **/
  public List<Claim> getClaims() {
    return claims;
  }

  public void setClaims(List<Claim> claims) {
    this.claims = claims;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelfRegistrationUser selfRegistrationUser = (SelfRegistrationUser) o;
    return Objects.equals(this.username, selfRegistrationUser.username) &&
        Objects.equals(this.tenantDomain, selfRegistrationUser.tenantDomain) &&
        Objects.equals(this.realm, selfRegistrationUser.realm) &&
        Objects.equals(this.password, selfRegistrationUser.password) &&
        Objects.equals(this.claims, selfRegistrationUser.claims);
  }

  @Override
  public int hashCode() {
    return Objects.hash(username, tenantDomain, realm, password, claims);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelfRegistrationUser {\n");
    
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    tenantDomain: ").append(toIndentedString(tenantDomain)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    claims: ").append(toIndentedString(claims)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

